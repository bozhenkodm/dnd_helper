# Generated by Django 4.0.2 on 2022-02-08 11:51

import django.db.models.deletion
import multiselectfield.db.fields
from django.db import migrations, models

import base.constants.constants


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0021_alter_npc_armor_alter_npc_description_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='magicitemtype',
            options={
                'verbose_name': 'Magic item type',
                'verbose_name_plural': 'Magic item types',
            },
        ),
        migrations.AlterModelOptions(
            name='power',
            options={'verbose_name': 'Power', 'verbose_name_plural': 'Powers'},
        ),
        migrations.AlterModelOptions(
            name='simplemagicitem',
            options={
                'verbose_name': 'Magic item',
                'verbose_name_plural': 'Magic items',
            },
        ),
        migrations.AlterField(
            model_name='armor',
            name='level',
            field=models.SmallIntegerField(default=0, verbose_name='Level'),
        ),
        migrations.AlterField(
            model_name='armor',
            name='magic_item_type',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='base.magicitemtype',
                verbose_name='Magic item type',
            ),
        ),
        migrations.AlterField(
            model_name='magicitemtype',
            name='category',
            field=models.CharField(
                choices=[
                    ('COMMON', 'Обычный'),
                    ('UNCOMMON', 'Необычный'),
                    ('RARE', 'Редкий'),
                ],
                default=base.constants.constants.MagicItemCategory['UNCOMMON'],
                max_length=8,
                verbose_name='Category',
            ),
        ),
        migrations.AlterField(
            model_name='magicitemtype',
            name='max_level',
            field=models.PositiveSmallIntegerField(
                default=30, verbose_name='Maximum level'
            ),
        ),
        migrations.AlterField(
            model_name='magicitemtype',
            name='min_level',
            field=models.PositiveSmallIntegerField(
                default=1, verbose_name='Minimal level'
            ),
        ),
        migrations.AlterField(
            model_name='magicitemtype',
            name='name',
            field=models.CharField(max_length=100, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='magicitemtype',
            name='picture',
            field=models.ImageField(
                blank=True, null=True, upload_to='items', verbose_name='Picture'
            ),
        ),
        migrations.AlterField(
            model_name='magicitemtype',
            name='slots',
            field=multiselectfield.db.fields.MultiSelectField(
                choices=[
                    ('armor', 'Броня'),
                    ('head', 'Голова'),
                    ('ring', 'Кольца'),
                    ('feet', 'Обувь'),
                    ('weapon', 'Оружие'),
                    ('hands', 'Перчатки'),
                    ('waist', 'Пояс'),
                    ('arms', 'Предплечья/Щит'),
                    ('tatoo', 'Татуировка'),
                    ('wondrous_items', 'Чудесный предмет'),
                    ('neck', 'Шея'),
                ],
                max_length=70,
                null=True,
                verbose_name='Slots',
            ),
        ),
        migrations.AlterField(
            model_name='magicitemtype',
            name='source',
            field=models.CharField(
                blank=True,
                help_text='Book and page',
                max_length=20,
                null=True,
                verbose_name='Source',
            ),
        ),
        migrations.AlterField(
            model_name='magicitemtype',
            name='step',
            field=models.PositiveSmallIntegerField(
                default=5, verbose_name='Level step'
            ),
        ),
        migrations.AlterField(
            model_name='npc',
            name='arms_slot',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='npc_arms',
                to='base.armsslotitem',
                verbose_name='Arms slot',
            ),
        ),
        migrations.AlterField(
            model_name='npc',
            name='feet_slot',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='npc_feet',
                to='base.feetslotitem',
                verbose_name='Feet slot',
            ),
        ),
        migrations.AlterField(
            model_name='npc',
            name='hands_slot',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='npc_hands',
                to='base.handsslotitem',
                verbose_name='Hands slot',
            ),
        ),
        migrations.AlterField(
            model_name='npc',
            name='head_slot',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='npc_heads',
                to='base.headslotitem',
                verbose_name='Head slot',
            ),
        ),
        migrations.AlterField(
            model_name='npc',
            name='left_ring_slot',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='npc_left_rings',
                to='base.ringsslotitem',
                verbose_name='Left hand ring',
            ),
        ),
        migrations.AlterField(
            model_name='npc',
            name='neck_slot',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='npc_necks',
                to='base.neckslotitem',
                verbose_name='Neck slot',
            ),
        ),
        migrations.AlterField(
            model_name='npc',
            name='right_ring_slot',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='npc_right_rings',
                to='base.ringsslotitem',
                verbose_name='Right hand ring',
            ),
        ),
        migrations.AlterField(
            model_name='npc',
            name='waist_slot',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='npc_waists',
                to='base.waistslotitem',
                verbose_name='Waist slot',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='accessory_type',
            field=models.CharField(
                blank=True,
                choices=[
                    ('TWO_WEAPONS', 'Два оружия'),
                    ('IMPLEMENT', 'Инструмент'),
                    ('WEAPON', 'Оружие'),
                ],
                max_length=11,
                null=True,
                verbose_name='Accessory type',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='action_type',
            field=models.CharField(
                choices=[
                    ('STANDARD', 'Стандартное действие'),
                    ('MINOR', 'Малое действие'),
                    ('FREE', 'Свободное действие'),
                    ('MOVEMENT', 'Действие движения'),
                    ('PROVOKED', 'Провоцированное действие'),
                    ('INTERRUPT', 'Немедленное прерывание'),
                    ('REACTION', 'Немедленный ответ'),
                    ('NO_ACTION', 'Нет действия'),
                ],
                default=base.constants.constants.PowerActionTypeEnum['STANDARD'],
                max_length=9,
                null=True,
                verbose_name='Action type',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='attack_ability',
            field=models.CharField(
                blank=True,
                choices=[
                    ('STRENGTH', 'Сила'),
                    ('CONSTITUTION', 'Телосложение'),
                    ('DEXTERITY', 'Ловкость'),
                    ('INTELLIGENCE', 'Интеллект'),
                    ('WISDOM', 'Мудрость'),
                    ('CHARISMA', 'Харизма'),
                ],
                max_length=12,
                null=True,
                verbose_name='Attack ability',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='attack_bonus',
            field=models.SmallIntegerField(default=0, verbose_name='Attack bonus'),
        ),
        migrations.AlterField(
            model_name='power',
            name='available_weapon_types',
            field=models.ManyToManyField(
                blank=True,
                help_text='for powers with weapons',
                to='base.WeaponType',
                verbose_name='Weapon requirement',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='burst',
            field=models.SmallIntegerField(default=0, verbose_name='Area'),
        ),
        migrations.AlterField(
            model_name='power',
            name='damage_dice',
            field=models.SmallIntegerField(
                blank=True,
                choices=[
                    (4, 'k4'),
                    (6, 'k6'),
                    (8, 'k8'),
                    (10, 'k10'),
                    (12, 'k12'),
                    (20, 'k20'),
                    (100, 'k100'),
                ],
                null=True,
                verbose_name='Damage dice',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='damage_type',
            field=multiselectfield.db.fields.MultiSelectField(
                choices=[
                    ('NONE', ''),
                    ('THUNDER', 'Звук'),
                    ('RADIANT', 'Излучение'),
                    ('ACID', 'Кислота'),
                    ('NECROTIC', 'Некротическая энергия'),
                    ('FIRE', 'Огонь'),
                    ('PSYCHIC', 'Психическая энергия'),
                    ('FORCE', 'Силовое поле'),
                    ('COLD', 'Холод'),
                    ('LIGHTNING', 'Электричество'),
                    ('POISON', 'Яд'),
                ],
                default=base.constants.constants.PowerDamageTypeEnum['NONE'],
                max_length=75,
                verbose_name='Damage type',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='defence',
            field=models.CharField(
                blank=True,
                choices=[
                    ('ARMOR_CLASS', 'КД'),
                    ('FORTITUDE', 'Стойкость'),
                    ('REFLEX', 'Реакция'),
                    ('WILL', 'Воля'),
                ],
                help_text='defence',
                max_length=11,
                null=True,
                verbose_name='against',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='power',
            name='dice_number',
            field=models.SmallIntegerField(default=1, verbose_name='Dice number'),
        ),
        migrations.AlterField(
            model_name='power',
            name='effect_type',
            field=multiselectfield.db.fields.MultiSelectField(
                choices=[
                    ('NONE', ''),
                    ('ZONE', 'Зона'),
                    ('CONJURATION', 'Иллюзия'),
                    ('HEALING', 'Исцеление'),
                    ('RELIABLE', 'Надежный'),
                    ('CHARM', 'Очарование'),
                    ('POLYMORPH', 'Превращение'),
                    ('SLEEP', 'Сон'),
                    ('STANCE', 'Стойка'),
                    ('FEAR', 'Страх'),
                    ('TELEPORTATION', 'Телепортация'),
                    ('RATTLING', 'Ужасающий'),
                    ('INVIGORATING', 'Укрепляющий'),
                    ('RAGE', 'Ярость'),
                ],
                default=base.constants.constants.PowerEffectTypeEnum['NONE'],
                max_length=113,
                verbose_name='Effect type',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='frequency',
            field=models.CharField(
                choices=[
                    ('PASSIVE', 'Пассивный'),
                    ('AT_WILL', 'Неограниченный'),
                    ('ENCOUNTER', 'На сцену'),
                    ('DAYLY', 'На день'),
                ],
                max_length=9,
                verbose_name='Usage frequency',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='functional_template',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='powers',
                to='base.functionaltemplate',
                verbose_name='Functional template',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='klass',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='powers',
                to='base.class',
                verbose_name='Class',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='level',
            field=models.SmallIntegerField(default=0, verbose_name='Level'),
        ),
        migrations.AlterField(
            model_name='power',
            name='magic_item_type',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='powers',
                to='base.magicitemtype',
                verbose_name='Magic item type',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='name',
            field=models.CharField(max_length=100, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='power',
            name='race',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='powers',
                to='base.race',
                verbose_name='Race',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='range',
            field=models.SmallIntegerField(default=0, verbose_name='Distance'),
        ),
        migrations.AlterField(
            model_name='power',
            name='range_type',
            field=models.CharField(
                choices=[
                    ('MELEE_WEAPON', 'Рукопашное оружие'),
                    ('MELEE', 'Рукопашное'),
                    ('RANGED', 'Дальнобойное'),
                    ('MELEE_RANGED_WEAPON', 'Рукопашное или дальнобойное оружие'),
                    ('RANGED_WEAPON', 'Дальнобойное оружие'),
                    ('BURST', 'Вспышка'),
                    ('BLAST', 'Волна'),
                    ('WALL', 'Стена'),
                    ('PERSONAL', 'Персональный'),
                ],
                default=base.constants.constants.PowerRangeTypeEnum['PERSONAL'],
                max_length=19,
                verbose_name='Range type',
            ),
        ),
        migrations.AlterField(
            model_name='power',
            name='subclass',
            field=models.SmallIntegerField(default=0, verbose_name='Subclass'),
        ),
        migrations.AlterField(
            model_name='powerproperty',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='powerproperty',
            name='level',
            field=models.SmallIntegerField(default=1, verbose_name='Level'),
        ),
        migrations.AlterField(
            model_name='powerproperty',
            name='order',
            field=models.SmallIntegerField(default=0, verbose_name='Order'),
        ),
        migrations.AlterField(
            model_name='powerproperty',
            name='power',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='properties',
                to='base.power',
                verbose_name='Power',
            ),
        ),
        migrations.AlterField(
            model_name='powerproperty',
            name='subclass',
            field=models.SmallIntegerField(
                choices=[(0, '---------')], default=0, verbose_name='Subclass'
            ),
        ),
        migrations.AlterField(
            model_name='simplemagicitem',
            name='level',
            field=models.SmallIntegerField(default=0, verbose_name='Level'),
        ),
        migrations.AlterField(
            model_name='simplemagicitem',
            name='magic_item_type',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='base.magicitemtype',
                verbose_name='Magic item type',
            ),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='level',
            field=models.SmallIntegerField(default=0, verbose_name='Level'),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='magic_item_type',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='base.magicitemtype',
                verbose_name='Magic item type',
            ),
        ),
    ]
