# Generated by Django 3.2.9 on 2021-12-07 15:14

import django.db.models.deletion
import multiselectfield.db.fields
from django.db import migrations, models

import base.models.mixins.abilities
import base.models.mixins.defences
import base.models.mixins.skills


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Armor',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=20, verbose_name='Название')),
                (
                    'armor_type',
                    models.SmallIntegerField(
                        choices=[
                            (10, 'Тканевый'),
                            (20, 'Кожаный'),
                            (30, 'Шкурный'),
                            (40, 'Кольчуга'),
                            (50, 'Чешуйчатый'),
                            (60, 'Латный'),
                        ],
                        verbose_name='Тип',
                    ),
                ),
                (
                    'armor_class',
                    models.SmallIntegerField(default=0, verbose_name='Класс доспеха'),
                ),
                (
                    'enchantment',
                    models.SmallIntegerField(default=0, verbose_name='Улучшение'),
                ),
                (
                    'speed_penalty',
                    models.SmallIntegerField(default=0, verbose_name='Штраф скорости'),
                ),
                (
                    'skill_penalty',
                    models.SmallIntegerField(default=0, verbose_name='Штраф навыков'),
                ),
            ],
            options={
                'verbose_name': 'Доспех',
                'verbose_name_plural': 'Доспехи',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.SmallIntegerField(
                        choices=[
                            (10, 'Апостол'),
                            (20, 'Артефактор'),
                            (30, 'Бард'),
                            (35, 'Вампир'),
                            (40, 'Варвар'),
                            (50, 'Военачальник'),
                            (55, 'Военный священник (жрец)'),
                            (60, 'Воин'),
                            (70, 'Волшебник'),
                            (80, 'Друид'),
                            (90, 'Жрец'),
                            (95, 'Ловчий'),
                            (100, 'Каратель'),
                            (110, 'Колдун'),
                            (120, 'Мечник-маг'),
                            (125, 'Монах'),
                            (130, 'Паладин'),
                            (140, 'Плут'),
                            (150, 'Рунный жрец'),
                            (160, 'Следопыт (Дальнобойный)'),
                            (170, 'Следопыт (Рукопашник)'),
                            (175, 'Хексблэйд (колдун)'),
                            (180, 'Хранитель'),
                            (190, 'Чародей'),
                            (200, 'Шаман'),
                        ],
                        unique=True,
                        verbose_name='Название',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Класс',
                'verbose_name_plural': 'Классы',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='FunctionalTemplate',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
                (
                    'min_level',
                    models.SmallIntegerField(
                        default=0, verbose_name='Минимальный уровень'
                    ),
                ),
                (
                    'armor_class_bonus',
                    models.SmallIntegerField(default=0, verbose_name='Бонус КД'),
                ),
                (
                    'fortitude_bonus',
                    models.SmallIntegerField(default=0, verbose_name='Бонус стойкости'),
                ),
                (
                    'reflex_bonus',
                    models.SmallIntegerField(default=0, verbose_name='Бонус реакции'),
                ),
                (
                    'will_bonus',
                    models.SmallIntegerField(default=0, verbose_name='Бонус воли'),
                ),
                (
                    'save_bonus',
                    models.SmallIntegerField(
                        default=2, verbose_name='Бонус спасбросков'
                    ),
                ),
                (
                    'action_points_bonus',
                    models.SmallIntegerField(
                        default=1, verbose_name='Дополнительные очки действия'
                    ),
                ),
                (
                    'hit_points_per_level',
                    models.SmallIntegerField(default=8, verbose_name='Хиты за уровень'),
                ),
            ],
            options={
                'verbose_name': 'Функциональный шаблон',
                'verbose_name_plural': 'Функциональные шаблоны',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Implement',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'slug',
                    models.CharField(max_length=20, verbose_name='Тип инструмента'),
                ),
                ('name', models.CharField(max_length=20, verbose_name='Название')),
                (
                    'enchantment',
                    models.SmallIntegerField(default=0, verbose_name='Улучшение'),
                ),
            ],
            options={
                'verbose_name': 'Инструмент',
                'verbose_name_plural': 'Инструменты',
            },
        ),
        migrations.CreateModel(
            name='PlayerCharacters',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('armor_class', models.PositiveSmallIntegerField(verbose_name='КД')),
                (
                    'fortitude',
                    models.PositiveSmallIntegerField(verbose_name='Стойкость'),
                ),
                ('reflex', models.PositiveSmallIntegerField(verbose_name='Реакция')),
                ('will', models.PositiveSmallIntegerField(verbose_name='Воля')),
                (
                    'initiative',
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name='Инициатива'
                    ),
                ),
                (
                    'passive_perception',
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name='Пассивная внимательность'
                    ),
                ),
                (
                    'passive_insight',
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name='Пассивная проницательность'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Игровой персонаж',
                'verbose_name_plural': 'Игровые персонажи',
            },
        ),
        migrations.CreateModel(
            name='Power',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                (
                    'description',
                    models.TextField(blank=True, null=True, verbose_name='Описание'),
                ),
                (
                    'frequency',
                    models.CharField(
                        choices=[
                            ('PASSIVE', 'Пассивный'),
                            ('AT_WILL', 'Неограниченный'),
                            ('ENCOUNTER', 'На сцену'),
                            ('DAYLY', 'На день'),
                        ],
                        max_length=9,
                        verbose_name='Частота использования',
                    ),
                ),
                (
                    'action_type',
                    models.CharField(
                        choices=[
                            ('STANDARD', 'Стандартное действие'),
                            ('MINOR', 'Малое действие'),
                            ('FREE', 'Свободное действие'),
                            ('MOVEMENT', 'Действие движения'),
                            ('PROVOKED', 'Провоцированное действие'),
                            ('INTERRUPT', 'Немедленное прерывание'),
                            ('REACTION', 'Немедленный ответ'),
                            ('NO_ACTION', 'Нет действия'),
                        ],
                        default='STANDARD',
                        max_length=9,
                        null=True,
                        verbose_name='Действие',
                    ),
                ),
                (
                    'subclass',
                    models.SmallIntegerField(default=0, verbose_name='Подкласс'),
                ),
                ('level', models.SmallIntegerField(default=0, verbose_name='Уровень')),
                (
                    'attack_attribute',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('STRENGTH', 'Сила'),
                            ('CONSTITUTION', 'Телосложение'),
                            ('DEXTERITY', 'Ловкость'),
                            ('INTELLIGENCE', 'Интеллект'),
                            ('WISDOM', 'Мудрость'),
                            ('CHARISMA', 'Харизма'),
                        ],
                        max_length=12,
                        null=True,
                        verbose_name='Атакующая характеристика',
                    ),
                ),
                (
                    'attack_bonus',
                    models.SmallIntegerField(default=0, verbose_name='Бонус атаки'),
                ),
                (
                    'defence',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('ARMOR_CLASS', 'КД'),
                            ('FORTITUDE', 'Стойкость'),
                            ('REFLEX', 'Реакция'),
                            ('WILL', 'Воля'),
                        ],
                        max_length=11,
                        null=True,
                        verbose_name='Против защиты',
                    ),
                ),
                (
                    'effect_type',
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ('NONE', ''),
                            ('ZONE', 'Зона'),
                            ('CONJURATION', 'Иллюзия'),
                            ('HEALING', 'Исцеление'),
                            ('RELIABLE', 'Надежный'),
                            ('CHARM', 'Очарование'),
                            ('POLYMORPH', 'Превращение'),
                            ('SLEEP', 'Сон'),
                            ('STANCE', 'Стойка'),
                            ('FEAR', 'Страх'),
                            ('TELEPORTATION', 'Телепортация'),
                            ('RATTLING', 'Ужасающий'),
                            ('INVIGORATING', 'Укрепляющий'),
                            ('RAGE', 'Ярость'),
                        ],
                        default='NONE',
                        max_length=113,
                        verbose_name='Тип эффекта',
                    ),
                ),
                (
                    'damage_type',
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ('NONE', ''),
                            ('THUNDER', 'Звук'),
                            ('RADIANT', 'Излучение'),
                            ('ACID', 'Кислота'),
                            ('NECROTIC', 'Некротическая энергия'),
                            ('FIRE', 'Огонь'),
                            ('PSYCHIC', 'Психическая энергия'),
                            ('COLD', 'Холод'),
                            ('LIGHTNING', 'Электричество'),
                            ('POISON', 'Яд'),
                        ],
                        default='NONE',
                        max_length=69,
                        verbose_name='Тип урона',
                    ),
                ),
                (
                    'dice_number',
                    models.SmallIntegerField(
                        default=1, verbose_name='Количество кубов'
                    ),
                ),
                (
                    'damage_dice',
                    models.SmallIntegerField(
                        blank=True,
                        choices=[
                            (4, 'k4'),
                            (6, 'k6'),
                            (8, 'k8'),
                            (10, 'k10'),
                            (12, 'k12'),
                            (20, 'k20'),
                            (100, 'k100'),
                        ],
                        null=True,
                        verbose_name='Кость урона',
                    ),
                ),
                (
                    'accessory_type',
                    models.CharField(
                        blank=True,
                        choices=[('IMPLEMENT', 'Инструмент'), ('WEAPON', 'Оружие')],
                        max_length=9,
                        null=True,
                        verbose_name='Тип вооружения',
                    ),
                ),
                (
                    'range_type',
                    models.CharField(
                        choices=[
                            ('MELEE_WEAPON', 'Рукопашное оружие'),
                            ('MELEE', 'Рукопашное'),
                            ('RANGED', 'Дальнобойное'),
                            (
                                'MELEE_RANGED_WEAPON',
                                'Рукопашное или дальнобойное оружие',
                            ),
                            ('RANGED_WEAPON', 'Дальнобойное оружие'),
                            ('BURST', 'Вспышка'),
                            ('BLAST', 'Волна'),
                            ('WALL', 'Стена'),
                            ('PERSONAL', 'Персональный'),
                        ],
                        default='PERSONAL',
                        max_length=19,
                        verbose_name='Дальность',
                    ),
                ),
                (
                    'range',
                    models.SmallIntegerField(default=0, verbose_name='Дальность'),
                ),
                ('burst', models.SmallIntegerField(default=0, verbose_name='Площадь')),
            ],
            options={
                'verbose_name': 'Талант',
                'verbose_name_plural': 'Таланты',
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        choices=[
                            ('BUGBEAR', 'Багбир'),
                            ('VRYLOKA', 'Врылока'),
                            ('HAMADRYAD', 'Гамадриада'),
                            ('GITHZERAI', 'Гитзерай'),
                            ('GNOLL', 'Гнолл'),
                            ('GNOME', 'Гном'),
                            ('GOBLIN', 'Гоблин'),
                            ('GOLIATH', 'Голиаф'),
                            ('DWARF', 'Дварф'),
                            ('DEVA', 'Дев'),
                            ('GENASI_WINDSOUL', 'Дженази, ветер'),
                            ('GENASI_WATERSOUL', 'Дженази, вода'),
                            ('GENASI_EARTHSOUL', 'Дженази, земля'),
                            ('GENASI_FIRESOUL', 'Дженази, огонь'),
                            ('GENASI_STORMSOUL', 'Дженази, шторм'),
                            ('WILDEN', 'Дикарь'),
                            ('DOPPELGANGER', 'Доппельгангер'),
                            ('DRAGONBORN', 'Драконорожденный'),
                            ('DROW', 'Дроу'),
                            ('DUERGAR', 'Дуэргар'),
                            ('KALASHTAR', 'Калаштар'),
                            ('KENKU', 'Кенку'),
                            ('KOBOLD', 'Кобольд'),
                            ('WARFORGED', 'Кованый'),
                            ('BLADELING', 'Лезвие'),
                            ('MINOTAUR', 'Минотавр'),
                            ('MUL', 'Мул'),
                            ('ORC', 'Орк'),
                            ('PIXIE', 'Пикси'),
                            ('HALFORC', 'Полуорк'),
                            ('HALFLING', 'Полурослик'),
                            ('HALFELF', 'Полуэльф'),
                            ('SATYR', 'Сатир'),
                            ('TIEFLING', 'Тифлинг'),
                            ('THRI_KREEN', 'Три-крин'),
                            ('HOBGOBLIN', 'Хобгоблин'),
                            ('HUMAN', 'Человек'),
                            ('SHADAR_KAI', 'Шадар-Кай'),
                            ('SHIFTER_RAZORCLAW', 'Шифтер, бритволапый'),
                            ('SHIFTER_LONGTEETH', 'Шифтер, длиннозубый'),
                            ('ELADRIN', 'Эладрин'),
                            ('ELF', 'Эльф'),
                        ],
                        max_length=17,
                        unique=True,
                        verbose_name='Название',
                    ),
                ),
                (
                    'is_sociable',
                    models.BooleanField(default=True, verbose_name='Социальная раса'),
                ),
            ],
            options={
                'verbose_name': 'Раса',
                'verbose_name_plural': 'Расы',
            },
        ),
        migrations.CreateModel(
            name='WeaponType',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        max_length=20, unique=True, verbose_name='Название'
                    ),
                ),
                (
                    'slug',
                    models.CharField(max_length=20, unique=True, verbose_name='Slug'),
                ),
            ],
            options={
                'verbose_name': 'Тип оружия',
                'verbose_name_plural': 'Типы оружия',
            },
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=20, verbose_name='Название')),
                (
                    'enchantment',
                    models.SmallIntegerField(default=0, verbose_name='Улучшение'),
                ),
                (
                    'weapon_type',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='base.weapontype',
                        verbose_name='Тип оружия',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Оружие',
                'verbose_name_plural': 'Оружие',
            },
        ),
        migrations.CreateModel(
            name='PowerProperty',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'title',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('ATTACK', 'Атака'),
                            ('OTHER', 'Другое'),
                            ('SPECIAL', 'Особенность'),
                            ('HIT', 'Попадание'),
                            ('MISS', 'Промах'),
                            ('REQUIREMENT', 'Требование'),
                            ('TRIGGER', 'Триггер'),
                            ('TARGET', 'Цель'),
                            ('EFFECT', 'Эффект'),
                        ],
                        max_length=11,
                        null=True,
                    ),
                ),
                ('level', models.SmallIntegerField(default=1, verbose_name='Уровень')),
                (
                    'subclass',
                    models.SmallIntegerField(
                        choices=[(0, '---------')], default=0, verbose_name='Подкласс'
                    ),
                ),
                (
                    'description',
                    models.TextField(blank=True, null=True, verbose_name='Описание'),
                ),
                ('order', models.SmallIntegerField(default=0, verbose_name='Порядок')),
                (
                    'power',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='properties',
                        to='base.power',
                        verbose_name='Талант',
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='power',
            name='available_weapon_types',
            field=models.ManyToManyField(
                blank=True,
                help_text='для талантов с оружием',
                to='base.WeaponType',
                verbose_name='Требования к оружию',
            ),
        ),
        migrations.AddField(
            model_name='power',
            name='functional_template',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='powers',
                to='base.functionaltemplate',
                verbose_name='Функциональный шаблон',
            ),
        ),
        migrations.AddField(
            model_name='power',
            name='klass',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='powers',
                to='base.class',
                verbose_name='Класс',
            ),
        ),
        migrations.AddField(
            model_name='power',
            name='race',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='powers',
                to='base.race',
                verbose_name='Раса',
            ),
        ),
        migrations.CreateModel(
            name='NPC',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                (
                    'description',
                    models.TextField(blank=True, null=True, verbose_name='Описание'),
                ),
                (
                    'subclass',
                    models.SmallIntegerField(
                        choices=[(0, '---------')], default=0, verbose_name='Подкласс'
                    ),
                ),
                (
                    'sex',
                    models.CharField(
                        choices=[('M', 'Муж'), ('F', 'Жен'), ('N', 'Н/Д')],
                        max_length=1,
                        verbose_name='Пол',
                    ),
                ),
                ('level', models.PositiveSmallIntegerField(verbose_name='Уровень')),
                (
                    'base_strength',
                    models.SmallIntegerField(verbose_name='Сила (базовая)'),
                ),
                (
                    'base_constitution',
                    models.SmallIntegerField(verbose_name='Телосложение (базовое)'),
                ),
                (
                    'base_dexterity',
                    models.SmallIntegerField(verbose_name='Ловкость (базовая)'),
                ),
                (
                    'base_intelligence',
                    models.SmallIntegerField(verbose_name='Интеллект (базовый)'),
                ),
                (
                    'base_wisdom',
                    models.SmallIntegerField(verbose_name='Мудрость (базовая)'),
                ),
                (
                    'base_charisma',
                    models.SmallIntegerField(verbose_name='Харизма (базовая)'),
                ),
                (
                    'var_bonus_attr',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('STRENGTH', 'Сила'),
                            ('CONSTITUTION', 'Телосложение'),
                            ('DEXTERITY', 'Ловкость'),
                            ('INTELLIGENCE', 'Интеллект'),
                            ('WISDOM', 'Мудрость'),
                            ('CHARISMA', 'Харизма'),
                        ],
                        max_length=12,
                        null=True,
                        verbose_name='Выборочный бонус характеристики',
                    ),
                ),
                (
                    'level4_bonus_attrs',
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ('STRENGTH', 'Сила'),
                            ('CONSTITUTION', 'Телосложение'),
                            ('DEXTERITY', 'Ловкость'),
                            ('INTELLIGENCE', 'Интеллект'),
                            ('WISDOM', 'Мудрость'),
                            ('CHARISMA', 'Харизма'),
                        ],
                        max_length=60,
                        null=True,
                        verbose_name='Бонус характеристики на 4 уровне',
                    ),
                ),
                (
                    'level8_bonus_attrs',
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ('STRENGTH', 'Сила'),
                            ('CONSTITUTION', 'Телосложение'),
                            ('DEXTERITY', 'Ловкость'),
                            ('INTELLIGENCE', 'Интеллект'),
                            ('WISDOM', 'Мудрость'),
                            ('CHARISMA', 'Харизма'),
                        ],
                        max_length=60,
                        null=True,
                        verbose_name='Бонус характеристики на 8 уровне',
                    ),
                ),
                (
                    'level14_bonus_attrs',
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ('STRENGTH', 'Сила'),
                            ('CONSTITUTION', 'Телосложение'),
                            ('DEXTERITY', 'Ловкость'),
                            ('INTELLIGENCE', 'Интеллект'),
                            ('WISDOM', 'Мудрость'),
                            ('CHARISMA', 'Харизма'),
                        ],
                        max_length=60,
                        null=True,
                        verbose_name='Бонус характеристики на 14 уровне',
                    ),
                ),
                (
                    'level18_bonus_attrs',
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ('STRENGTH', 'Сила'),
                            ('CONSTITUTION', 'Телосложение'),
                            ('DEXTERITY', 'Ловкость'),
                            ('INTELLIGENCE', 'Интеллект'),
                            ('WISDOM', 'Мудрость'),
                            ('CHARISMA', 'Харизма'),
                        ],
                        max_length=60,
                        null=True,
                        verbose_name='Бонус характеристики на 18 уровне',
                    ),
                ),
                (
                    'level24_bonus_attrs',
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ('STRENGTH', 'Сила'),
                            ('CONSTITUTION', 'Телосложение'),
                            ('DEXTERITY', 'Ловкость'),
                            ('INTELLIGENCE', 'Интеллект'),
                            ('WISDOM', 'Мудрость'),
                            ('CHARISMA', 'Харизма'),
                        ],
                        max_length=60,
                        null=True,
                        verbose_name='Бонус характеристики на 24 уровне',
                    ),
                ),
                (
                    'level28_bonus_attrs',
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ('STRENGTH', 'Сила'),
                            ('CONSTITUTION', 'Телосложение'),
                            ('DEXTERITY', 'Ловкость'),
                            ('INTELLIGENCE', 'Интеллект'),
                            ('WISDOM', 'Мудрость'),
                            ('CHARISMA', 'Харизма'),
                        ],
                        max_length=60,
                        null=True,
                        verbose_name='Бонус характеристики на 28 уровне',
                    ),
                ),
                (
                    'trained_skills',
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ('ACROBATICS', 'Акробатика'),
                            ('ATHLETICS', 'Атлетика'),
                            ('PERCEPTION', 'Внимательность'),
                            ('THIEVERY', 'Воровство'),
                            ('ENDURANCE', 'Выносливость'),
                            ('INTIMIDATE', 'Запугивание'),
                            ('STREETWISE', 'Знание улиц'),
                            ('HISTORY', 'История'),
                            ('ARCANA', 'Магия'),
                            ('BLUFF', 'Обман'),
                            ('DIPLOMACY', 'Переговоры'),
                            ('DUNGEONEERING', 'Подземелья'),
                            ('NATURE', 'Природа'),
                            ('INSIGHT', 'Проницательность'),
                            ('RELIGION', 'Религия'),
                            ('STEALTH', 'Скрытность'),
                            ('HEAL', 'Целительство'),
                        ],
                        max_length=154,
                        null=True,
                        verbose_name='Тренированные навыки',
                    ),
                ),
                (
                    'shield',
                    models.CharField(
                        blank=True,
                        choices=[('LIGHT', 'Лёгкий щит'), ('HEAVY', 'Тяжелый щит')],
                        max_length=5,
                        null=True,
                        verbose_name='Щит',
                    ),
                ),
                (
                    'armor',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='base.armor',
                        verbose_name='Доспехи',
                    ),
                ),
                (
                    'functional_template',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='base.functionaltemplate',
                        verbose_name='Функциональный шаблон',
                    ),
                ),
                (
                    'implements',
                    models.ManyToManyField(
                        blank=True, to='base.Implement', verbose_name='Инструменты'
                    ),
                ),
                (
                    'klass',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='base.class',
                        verbose_name='Класс',
                    ),
                ),
                ('powers', models.ManyToManyField(blank=True, to='base.Power')),
                (
                    'race',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='base.race',
                        verbose_name='Раса',
                    ),
                ),
                (
                    'weapons',
                    models.ManyToManyField(
                        blank=True, to='base.Weapon', verbose_name='Оружие'
                    ),
                ),
            ],
            options={
                'verbose_name': 'NPC',
                'verbose_name_plural': 'NPCS',
            },
            bases=(
                base.models.mixins.defences.DefenceMixin,
                base.models.mixins.abilities.AttributeMixin,
                base.models.mixins.skills.SkillMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'short_description',
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name='Краткое описание',
                    ),
                ),
                (
                    'description',
                    models.TextField(blank=True, null=True, verbose_name='Описание'),
                ),
                (
                    'roll_for_players',
                    models.BooleanField(
                        default=False, verbose_name='Кидать инициативу за игроков?'
                    ),
                ),
                (
                    'npcs',
                    models.ManyToManyField(
                        blank=True, to='base.NPC', verbose_name='Мастерские персонажи'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Сцена',
                'verbose_name_plural': 'Сцены',
            },
        ),
        migrations.CreateModel(
            name='CombatantsPC',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('initiative', models.FloatField(default=0, verbose_name='Инициатива')),
                (
                    'encounter',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='combatants_pcs',
                        to='base.encounter',
                        verbose_name='Сцена',
                    ),
                ),
                (
                    'pc',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='base.playercharacters',
                        verbose_name='Игровой персонаж',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Участник сцены (ИП)',
                'verbose_name_plural': 'Участники сцены (ИП)',
            },
        ),
        migrations.CreateModel(
            name='Combatants',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(max_length=50, verbose_name='Участник сцены'),
                ),
                (
                    'armor_class',
                    models.PositiveSmallIntegerField(default=0, verbose_name='КД'),
                ),
                (
                    'fortitude',
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name='Стойкость'
                    ),
                ),
                (
                    'reflex',
                    models.PositiveSmallIntegerField(default=0, verbose_name='Реакция'),
                ),
                (
                    'will',
                    models.PositiveSmallIntegerField(default=0, verbose_name='Воля'),
                ),
                (
                    'initiative',
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name='Инициатива'
                    ),
                ),
                (
                    'number',
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name='Количество однотипных'
                    ),
                ),
                (
                    'encounter',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='combatants',
                        to='base.encounter',
                        verbose_name='Сцена',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Участник сцены (Монстрятник)',
                'verbose_name_plural': 'Участники сцены (Монстрятник)',
            },
        ),
    ]
