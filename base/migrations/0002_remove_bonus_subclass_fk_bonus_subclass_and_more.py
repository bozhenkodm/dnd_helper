# Generated by Django 5.1.4 on 2024-12-12 00:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='bonus',
            name='subclass_fk',
        ),
        migrations.AddField(
            model_name='bonus',
            name='subclass',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='bonuses',
                to='base.subclass',
                verbose_name='Subclass',
            ),
        ),
        migrations.AlterField(
            model_name='class',
            name='implement_types',
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={'primary_end__isnull': True},
                related_name='implement_%(app_label)s_%(class)s_wielders',
                to='base.weapontype',
                verbose_name='Available implement types',
            ),
        ),
        migrations.AlterField(
            model_name='class',
            name='weapon_types',
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={'primary_end__isnull': True},
                to='base.weapontype',
                verbose_name='Available weapon types',
            ),
        ),
        migrations.AlterField(
            model_name='subclass',
            name='implement_types',
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={'primary_end__isnull': True},
                related_name='implement_%(app_label)s_%(class)s_wielders',
                to='base.weapontype',
                verbose_name='Available implement types',
            ),
        ),
        migrations.AlterField(
            model_name='subclass',
            name='weapon_types',
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={'primary_end__isnull': True},
                to='base.weapontype',
                verbose_name='Available weapon types',
            ),
        ),
    ]
